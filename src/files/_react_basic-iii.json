{
    "questions": [
      {
        "question": "What is the purpose of the `key` prop in React?",
        "options": [
          "To help React identify which items have changed, are added, or are removed.",
          "To set the initial state of a component.",
          "To define the style of a component.",
          "To handle events within a component."
        ],
        "answer": "To help React identify which items have changed, are added, or are removed.",
        "selectedOption": -1,
        "questionNumber": 1
      },
      {
        "question": "What does the `componentDidMount` lifecycle method do?",
        "options": [
          "It runs after the component is rendered for the first time.",
          "It runs before the component is rendered.",
          "It runs when the component is removed from the DOM.",
          "It updates the component's state."
        ],
        "answer": "It runs after the component is rendered for the first time.",
        "selectedOption": -1,
        "questionNumber": 2
      },
      {
        "question": "How do you create a functional component in React?",
        "options": [
          "By defining a JavaScript function that returns JSX.",
          "By extending the `React.Component` class.",
          "By using the `function` keyword without a return.",
          "By creating an object with a `render` method."
        ],
        "answer": "By defining a JavaScript function that returns JSX.",
        "selectedOption": -1,
        "questionNumber": 3
      },
      {
        "question": "What is the purpose of the `useEffect` hook?",
        "options": [
          "To perform side effects in functional components.",
          "To manage component state.",
          "To handle events.",
          "To create a context."
        ],
        "answer": "To perform side effects in functional components.",
        "selectedOption": -1,
        "questionNumber": 4
      },
      {
        "question": "What is a higher-order component?",
        "options": [
          "A function that takes a component and returns a new component.",
          "A component that contains multiple child components.",
          "A component that is used for error handling.",
          "A component that is styled using CSS."
        ],
        "answer": "A function that takes a component and returns a new component.",
        "selectedOption": -1,
        "questionNumber": 5
      },
      {
        "question": "What is context in React?",
        "options": [
          "A way to pass data through the component tree without props.",
          "A method for managing state.",
          "A way to handle events.",
          "A way to style components."
        ],
        "answer": "A way to pass data through the component tree without props.",
        "selectedOption": -1,
        "questionNumber": 6
      },
      {
        "question": "What does `props.children` refer to?",
        "options": [
          "The content passed between the opening and closing tags of a component.",
          "The properties passed to a component.",
          "The state of a component.",
          "The methods defined in a component."
        ],
        "answer": "The content passed between the opening and closing tags of a component.",
        "selectedOption": -1,
        "questionNumber": 7
      },
      {
        "question": "What is the use of `useContext` hook?",
        "options": [
          "To access the value of a context in a functional component.",
          "To create a new context.",
          "To update the state of a component.",
          "To handle side effects."
        ],
        "answer": "To access the value of a context in a functional component.",
        "selectedOption": -1,
        "questionNumber": 8
      },
      {
        "question": "How do you handle events in React?",
        "options": [
          "By passing a function as a prop.",
          "By using the `addEventListener` method.",
          "By defining an inline style.",
          "By creating a custom hook."
        ],
        "answer": "By passing a function as a prop.",
        "selectedOption": -1,
        "questionNumber": 9
      },
      {
        "question": "What is a controlled component?",
        "options": [
          "A component whose value is controlled by React state.",
          "A component that cannot be modified.",
          "A component that handles its own state.",
          "A component that renders based on props."
        ],
        "answer": "A component whose value is controlled by React state.",
        "selectedOption": -1,
        "questionNumber": 10
      }
    ]
  }
  